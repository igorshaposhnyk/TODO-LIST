{"ast":null,"code":"var _jsxFileName = \"/home/igor/WWW/Home Practic Task React/Todo list/styling-components/styling-components/starter-code-styling-components-project/src/components/Tasks/TaskInput/TaskInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"../../UI/Button/Button\";\nimport styles from \"./TaskInput.module.css\"; // import styled from \"styled-components\";\n// const FormControl = styled.div`\n//   margin: 0.5rem 0;\n// & label {\n//   font-weight: bold;\n//   display: block;\n//   margin-bottom: 0.5rem;\n//   color: ${(props) => (props.invalid ? 'red' : 'black')};\n// }\n// & input {\n//   display: block;\n//   width: 100%;\n//   border: 1px solid ${(props) => (props.invalid ? 'red' : '#ccc')};\n//   background: ${(props) => (props.invalid ? 'rgb(243, 157, 157)' : 'transparent')};\n//   font: inherit;\n//   line-height: 1.5rem;\n//   padding: 0 0.25rem;\n// }\n// & input:focus {\n//   outline: none;\n//   background: #c8e1e4;\n//   border-color: #00358b;\n// }\n// &.invalid label {\n//   color: red;\n// }\n// `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskInput = props => {\n  _s();\n\n  const [inputText, setInputText] = useState(\"\");\n  const [isInputValid, setInputValid] = useState(true);\n\n  const taskInputChangeHandler = event => {\n    if (event.target.value.trim().length > 0) {\n      setInputValid(true);\n    }\n\n    setInputText(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (inputText.trim().length === 0) {\n      setInputValid(false);\n      return;\n    }\n\n    props.onAddTask(inputText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: taskInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskInput, \"OxCHW05KJ0XFxdJD9CsV2tlZBWA=\");\n\n_c = TaskInput;\nexport default TaskInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskInput\");","map":{"version":3,"sources":["/home/igor/WWW/Home Practic Task React/Todo list/styling-components/styling-components/starter-code-styling-components-project/src/components/Tasks/TaskInput/TaskInput.js"],"names":["React","useState","Button","styles","TaskInput","props","inputText","setInputText","isInputValid","setInputValid","taskInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddTask"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB,C,CACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,YAAD,EAAeC,aAAf,IAAgCR,QAAQ,CAAC,IAAD,CAA9C;;AAEA,QAAMS,sBAAsB,GAAIC,KAAD,IAAW;AACxC,QAAGA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,GAA0BC,MAA1B,GAAmC,CAAtC,EAAwC;AACtCN,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AACDF,IAAAA,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACD,GALD;;AAOA,QAAMG,iBAAiB,GAAIL,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACM,cAAN;;AACA,QAAIX,SAAS,CAACQ,IAAV,GAAiBC,MAAjB,KAA4B,CAAhC,EAAmC;AACjCN,MAAAA,aAAa,CAAC,KAAD,CAAb;AACA;AACD;;AACDJ,IAAAA,KAAK,CAACa,SAAN,CAAgBZ,SAAhB;AACD,GAPD;;AASA,sBACE;AAAM,IAAA,QAAQ,EAAEU,iBAAhB;AAAA,4BAQE;AAAK,MAAA,SAAS,EAAEb,MAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAEO;AAFZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAeE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAvCD;;GAAMN,S;;KAAAA,S;AAyCN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"../../UI/Button/Button\";\nimport styles from \"./TaskInput.module.css\";\n// import styled from \"styled-components\";\n\n// const FormControl = styled.div`\n//   margin: 0.5rem 0;\n\n// & label {\n//   font-weight: bold;\n//   display: block;\n//   margin-bottom: 0.5rem;\n//   color: ${(props) => (props.invalid ? 'red' : 'black')};\n// }\n\n// & input {\n//   display: block;\n//   width: 100%;\n//   border: 1px solid ${(props) => (props.invalid ? 'red' : '#ccc')};\n//   background: ${(props) => (props.invalid ? 'rgb(243, 157, 157)' : 'transparent')};\n//   font: inherit;\n//   line-height: 1.5rem;\n//   padding: 0 0.25rem;\n// }\n\n// & input:focus {\n//   outline: none;\n//   background: #c8e1e4;\n//   border-color: #00358b;\n// }\n\n// &.invalid label {\n//   color: red;\n// }\n// `;\n\nconst TaskInput = (props) => {\n  const [inputText, setInputText] = useState(\"\");\n  const [isInputValid, setInputValid] = useState(true);\n\n  const taskInputChangeHandler = (event) => {\n    if(event.target.value.trim().length > 0){\n      setInputValid(true);\n    }\n    setInputText(event.target.value);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    if (inputText.trim().length === 0) {\n      setInputValid(false);\n      return;\n    }\n    props.onAddTask(inputText);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      {/* <FormControl invalid={!isInputValid}>\n        <label>Tasks</label>\n        <input\n          type=\"text\"\n          onChange={taskInputChangeHandler}\n        />\n      </FormControl> */}\n      <div className={styles}>\n        <label>Tasks</label>\n        <input\n          type=\"text\"\n          onChange={taskInputChangeHandler}\n        />\n      </div>\n      <Button type=\"submit\">Add Task</Button>\n    </form>\n  );\n};\n\nexport default TaskInput;\n"]},"metadata":{},"sourceType":"module"}