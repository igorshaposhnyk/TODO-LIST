{"ast":null,"code":"var _jsxFileName = \"/home/igor/WWW/Home Practic Task React/Todo list/styling-components/styling-components/starter-code-styling-components-project/src/components/Tasks/TaskInput/TaskInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"../../UI/Button/Button\"; // import styles from \"./TaskInput.module.css\";\n\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormControl = styled.div`\n  margin: 0.5rem 0;\n\n& label {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 0.5rem;\n  color: ${props => props.invalid ? 'red' : 'black'};\n}\n\n& input {\n  display: block;\n  width: 100%;\n  border: 1px solid ${props => props.invalid ? 'red' : '#ccc'};\n  background: ${props => props.invalid ? 'rgb(243, 157, 157)' : 'transparent'};\n  font: inherit;\n  line-height: 1.5rem;\n  padding: 0 0.25rem;\n}\n\n& input:focus {\n  outline: none;\n  background: #c8e1e4;\n  border-color: #00358b;\n}\n\n&.invalid label {\n  color: red;\n}\n`;\n_c = FormControl;\n\nconst TaskInput = props => {\n  _s();\n\n  const [inputText, setInputText] = useState(\"\");\n  const [isInputValid, setInputValid] = useState(true);\n\n  const taskInputChangeHandler = event => {\n    if (event.target.value.trim().length > 0) {\n      setInputValid(true);\n    }\n\n    setInputText(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (inputText.trim().length === 0) {\n      setInputValid(false);\n      return;\n    }\n\n    props.onAddTask(inputText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      invalid: !isInputValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: taskInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskInput, \"OxCHW05KJ0XFxdJD9CsV2tlZBWA=\");\n\n_c2 = TaskInput;\nexport default TaskInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormControl\");\n$RefreshReg$(_c2, \"TaskInput\");","map":{"version":3,"sources":["/home/igor/WWW/Home Practic Task React/Todo list/styling-components/styling-components/starter-code-styling-components-project/src/components/Tasks/TaskInput/TaskInput.js"],"names":["React","useState","Button","styled","FormControl","div","props","invalid","TaskInput","inputText","setInputText","isInputValid","setInputValid","taskInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddTask"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,wBAAnB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,WAAW,GAAGD,MAAM,CAACE,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,WAAYC,KAAD,IAAYA,KAAK,CAACC,OAAN,GAAgB,KAAhB,GAAwB,OAAS;AACxD;AACA;AACA;AACA;AACA;AACA,sBAAuBD,KAAD,IAAYA,KAAK,CAACC,OAAN,GAAgB,KAAhB,GAAwB,MAAQ;AAClE,gBAAiBD,KAAD,IAAYA,KAAK,CAACC,OAAN,GAAgB,oBAAhB,GAAuC,aAAe;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7BA;KAAMH,W;;AA+BN,MAAMI,SAAS,GAAIF,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,YAAD,EAAeC,aAAf,IAAgCX,QAAQ,CAAC,IAAD,CAA9C;;AAEA,QAAMY,sBAAsB,GAAIC,KAAD,IAAW;AACxC,QAAGA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,GAA0BC,MAA1B,GAAmC,CAAtC,EAAwC;AACtCN,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AACDF,IAAAA,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACD,GALD;;AAOA,QAAMG,iBAAiB,GAAIL,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACM,cAAN;;AACA,QAAIX,SAAS,CAACQ,IAAV,GAAiBC,MAAjB,KAA4B,CAAhC,EAAmC;AACjCN,MAAAA,aAAa,CAAC,KAAD,CAAb;AACA;AACD;;AACDN,IAAAA,KAAK,CAACe,SAAN,CAAgBZ,SAAhB;AACD,GAPD;;AASA,sBACE;AAAM,IAAA,QAAQ,EAAEU,iBAAhB;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAE,CAACR,YAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAEE;AAFZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhCD;;GAAML,S;;MAAAA,S;AAkCN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"../../UI/Button/Button\";\n// import styles from \"./TaskInput.module.css\";\nimport styled from \"styled-components\";\n\nconst FormControl = styled.div`\n  margin: 0.5rem 0;\n\n& label {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 0.5rem;\n  color: ${(props) => (props.invalid ? 'red' : 'black')};\n}\n\n& input {\n  display: block;\n  width: 100%;\n  border: 1px solid ${(props) => (props.invalid ? 'red' : '#ccc')};\n  background: ${(props) => (props.invalid ? 'rgb(243, 157, 157)' : 'transparent')};\n  font: inherit;\n  line-height: 1.5rem;\n  padding: 0 0.25rem;\n}\n\n& input:focus {\n  outline: none;\n  background: #c8e1e4;\n  border-color: #00358b;\n}\n\n&.invalid label {\n  color: red;\n}\n`;\n\nconst TaskInput = (props) => {\n  const [inputText, setInputText] = useState(\"\");\n  const [isInputValid, setInputValid] = useState(true);\n\n  const taskInputChangeHandler = (event) => {\n    if(event.target.value.trim().length > 0){\n      setInputValid(true);\n    }\n    setInputText(event.target.value);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    if (inputText.trim().length === 0) {\n      setInputValid(false);\n      return;\n    }\n    props.onAddTask(inputText);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <FormControl invalid={!isInputValid}>\n        <label>Tasks</label>\n        <input\n          type=\"text\"\n          onChange={taskInputChangeHandler}\n        />\n      </FormControl>\n      <Button type=\"submit\">Add Task</Button>\n    </form>\n  );\n};\n\nexport default TaskInput;\n"]},"metadata":{},"sourceType":"module"}